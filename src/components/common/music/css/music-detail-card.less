.music-detail-card {
  width: 100%;
  height: calc(22vh);
  border-radius: 5px;
  z-index: 1;
  transition: bottom 0.5s ease;
  //background-image: linear-gradient(to bottom, #f1b7f1, #FEFEFE);
  position: relative;
  display: flex;
  justify-content: center;

  .glassCard {
    width: 100%;
    height: 80%;
    border-radius: 5px;
    z-index: 1;
    position: absolute;
    opacity: 0.5;
    //filter: blur(100px);
    //flex: 1;
    //overflow:hidden;
    background-color: #FEFEFE;
  }

  .left {
    z-index: 2;
    width: 40%;
    margin: 15px 0px 0 28px;

    .discContainer {
      .needle {
        position: relative;
        left: 50%;
        width: 44px;
        height: 36px;
        z-index: 2;
        transition: all 1s;
        transform-origin: 5.3px 5.3px;

        img {
          width: auto;
          height: auto;
          max-width: 100%;
          max-height: 100%;
        }
      }

      // 光碟探头
      .needleRotate {
        transform-origin: 5.3px 5.3px;
        transform: rotate(22deg);
      }

      .disc {
        width: 110px;
        height: 110px;
        position: relative;
        top: -14px;

        // firstChild
        img:nth-child(1) {
          width: 100%;
        }

        .musicAvatar {
          position: absolute;
          top: 15%;
          left: 15%;
          width: 70%;
          z-index: -1;
        }
      }

      /* 碟子设置旋转动画 */

      .discAnimation {
        /* infinite动画无限循环 */
        animation: disc 25s linear infinite;
        /* 动画延迟一秒 */
        animation-delay: 0.8s;
      }

      /* 碟子暂停旋转的动画 */

      .pause {
        animation-play-state: paused;
        -webkit-animation-play-state: paused;
      }
    }
  }

  .right {
    max-width: 58%;
    min-width: 58%;
    z-index: 1;
    justify-content: center;

    .musicName {
      font-size: 1rem;
      color: rgb(22, 22, 22);
      text-align: center;
      margin: 15px 0 0 0;
      .singer {
        margin-left: 5px;
        color: rgb(145, 145, 145);
      }
    }

    .lyrics {
      height: 90px;
      font-size: 12px;
      text-align: center;
      overflow-y: scroll;
      margin: 15px 0 10px 0;

      .placeholder {
        height: 40%;
      }

      .lyricsItem {
        font-size: 12px;
        margin: 4px 6px 0 2px;
        transition: all 0.5s;
        line-height: 20px;
      }

      .currentLyric {
        font-weight: 600;
        font-size: 14px;
        color: #fc1717;
      }
    }

    .lyrics::-webkit-scrollbar {
      display: none;
    }
  }

}


.hide {
  // bottom: calc(-100vh + 55px);
  bottom: calc(-80vh + 55px);
  // transform不会引发重流 性能更好 但是这里如果使用transform 在resize时会出现musicDetailCard拖影的情况，是transition引发的，
  // 可能可以通过animation代替transtion解决，不太确定，没有尝试过，但是使用transform还需另外禁止index页面滚动，
  // 所以我这里还是选择使用固定定位 性能稍差，但是由于脱离的文档流，也不会差很远
  // transform: translateY(calc(80vh - 55px));
}


@keyframes disc {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}


.bottom {
  margin: 40px auto;
  // width: 55vw;
  width: 44vw;
}

.page {
  width: 100%;
  text-align: center;
  padding-bottom: 20px;
}

.tip {
  font-size: 20px;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.changeBackground {
  position: absolute;
  bottom: 10px;
  right: 20px;
  cursor: pointer;
}

.bottom /deep/ .el-loading-spinner {
  top: 40px;
}

.album,
.singer {
  cursor: pointer;
  font-size: 0.8rem;
  color: rgb(134, 130, 130);
}
